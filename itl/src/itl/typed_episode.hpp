/*----------------------------------------------------------------------------+
Copyright (c) 2007-2008: Joachim Faulhaber
+-----------------------------------------------------------------------------+
Copyright (c) 1999-2006: Cortex Software GmbH, Kantstrasse 57, Berlin
+-----------------------------------------------------------------------------+
Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
+----------------------------------------------------------------------------*/
#ifndef __typed_episode_h_JOFA_011015_H__
#define __typed_episode_h_JOFA_011015_H__

#include <itl/itl_interval.hpp>
#include <itl/ordered_type.hpp>

namespace itl
{

/**  
	<b>Episoden-Intercace</b>

	Eine Episode besitzt ein Intervall. 
  
	@author  Joachim Faulhaber
*/
template <class ItvDomTV>
class episode_interface
{
public:

	/// virtual dtor: cave leakem
	virtual ~episode_interface(){}

	/// das Intervall der Episode
	virtual interval<ItvDomTV> interval()const=0;

	// der Wert der Episode is dann dat Ding selba
};

/**  
	<b>ein Episode mit Typ dazu</b>

	Die Klasse TypesEpisodeAT ist nach Typ sortierbar, denn sie 
	implementiert \ref OrderedTypeAT. Ausserdem ist es eine Episode, denn
	sie implementiert \ref episode_interface.
  
	@author  Joachim Faulhaber
*/
template <class ItvDomTV, class TypeDomTV>
class typed_episode : public ordered_type_base<TypeDomTV>, public episode_interface<ItvDomTV>
{
};

} // namespace itl

#endif // __typed_episode_h_JOFA_011015_H__



